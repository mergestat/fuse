SET check_function_bodies = false;
INSERT INTO mergestat.repo_import_types (type, description) VALUES ('GITHUB_ORG', 'Import all repos in a GitHub org') ON CONFLICT DO NOTHING;
INSERT INTO mergestat.repo_import_types (type, description) VALUES ('GITHUB_USER', 'Import all repos belonging to a GitHub user') ON CONFLICT DO NOTHING;
INSERT INTO mergestat.repo_sync_log_types (type, description) VALUES ('INFO', 'Log line from a sync run') ON CONFLICT DO NOTHING;
INSERT INTO mergestat.repo_sync_log_types (type, description) VALUES ('ERROR', 'Error from a sync run') ON CONFLICT DO NOTHING;
INSERT INTO mergestat.repo_sync_queue_status_types (type, description) VALUES ('QUEUED', 'Sync job is queued') ON CONFLICT DO NOTHING;
INSERT INTO mergestat.repo_sync_queue_status_types (type, description) VALUES ('RUNNING', 'Syng job is running') ON CONFLICT DO NOTHING;
INSERT INTO mergestat.repo_sync_queue_status_types (type, description) VALUES ('DONE', 'Sync job is done') ON CONFLICT DO NOTHING;
INSERT INTO mergestat.repo_sync_types (type, description) VALUES ('GITHUB_REPO_METADATA', 'Get metadata from GitHub about a repo') ON CONFLICT DO NOTHING;
INSERT INTO mergestat.repo_sync_types (type, description) VALUES ('GIT_COMMITS', 'Get commit history of a repo') ON CONFLICT DO NOTHING;
INSERT INTO mergestat.repo_sync_types (type, description) VALUES ('GIT_FILES', 'Files for a git repo') ON CONFLICT DO NOTHING;
INSERT INTO mergestat.repo_sync_types (type, description) VALUES ('GIT_COMMIT_STATS', 'Get commit stats for a repo') ON CONFLICT DO NOTHING;
INSERT INTO mergestat.repo_sync_types (type, description) VALUES ('GITHUB_REPO_PRS', 'Get pull requests from a GitHub repo') ON CONFLICT DO NOTHING;
INSERT INTO mergestat.repo_sync_types (type, description) VALUES ('GITHUB_REPO_ISSUES', 'Get issues from a GitHub repo') ON CONFLICT DO NOTHING;
INSERT INTO mergestat.repo_sync_types (type, description) VALUES ('GITHUB_REPO_STARS', 'Get stargazers from a GitHub repo') ON CONFLICT DO NOTHING;
INSERT INTO mergestat.repo_sync_types (type, description) VALUES ('GIT_REFS', 'Refs for a git repo') ON CONFLICT DO NOTHING;
