version: '3.6'
services:
  postgres:
    image: postgres:12
    restart: always
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password

  graphql-engine:
    image: hasura/graphql-engine:v2.5.0
    ports:
      - 8080:8080
    depends_on:
      - postgres
    restart: always
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:password@postgres:5432/postgres
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:password@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey

  init:
    build:
      context: .
      dockerfile: Dockerfile.init
    environment:
      HASURA_GRAPHQL_ENDPOINT: http://graphql-engine:8080
      HASURA_DATABASE_NAME: default
      PGHOST: postgres
      PGUSER: postgres
      PGPASSWORD: password
      PGDATABASE: postgres
    working_dir: /fuse
    volumes:
      - .:/fuse
    depends_on:
      - graphql-engine

  worker:
    build:
      context: .
    stop_grace_period: 10m
    depends_on:
      - postgres
    environment:
      POSTGRES_CONNECTION: postgres://postgres:password@postgres:5432/postgres
      GITHUB_RATE_LIMIT: 1/2
    env_file:
      - .env
    ports:
      - 3301:8080

  grafana:
    image: grafana/grafana-oss:latest
    environment:
      PGHOST: postgres
      PGUSER: postgres
      PGPASSWORD: password
      PGDATABASE: postgres
    ports:
      - 3000:3000
    depends_on:
      - postgres
    restart: always
    volumes:
      - grafana_lib:/var/lib/grafana
      - grafana_etc:/etc/grafana
      - grafana_log:/var/log/grafana
      - ./scripts/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./scripts/grafana/provisioning:/etc/grafana/provisioning
      - ./scripts/grafana/dashboards:/var/lib/grafana/dashboards/

volumes:
  db_data:
  grafana_lib:
  grafana_etc:
  grafana_log:
